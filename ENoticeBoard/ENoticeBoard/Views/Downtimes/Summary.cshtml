@model ENoticeBoard.ViewModels.DowntimeSummaryViewModel

<style type="text/css">
    .btn-primary {
        margin-bottom: 5px;
        margin-left: 5px;
        margin-right: 5px;
    }
     
</style>

<form class="form-inline">
    <div class="form-group">
        <button type="button" id="btnCreateDT" name="btnCreate" class="btn btn-primary btn-group-lg" style="float: left">Add</button>
        </div>
    <div class="pull-right">
        <div class="form-group">
            <label>Period: </label>
            @Html.DropDownListFor(m => m.SelectedPeriod, new SelectList(Model.Periodddl, "Text", "Value"), new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label>Year: </label>
            @Html.DropDownListFor(m => m.SelectedYear, new SelectList(Model.Yearddl, "Text", "Value"), new { @class = "form-control" })
        </div>
        <div class="form-group">
            <button type="button" id="btnRefresh" name="btnRefresh class=btn btn-default pull-right">Refresh</button>
        </div>
    </div>

</form>

<table class="table table-bordered table-condensed table-responsive display table-striped" style="word-wrap: normal;table-layout: fixed">
    <tr>
        <th style="width: 40%!important">
            Subject
        </th>
        <th style="width: 10%">
            Date
        </th>
        <th>
            Description
        </th>
        <th style="width: 10%">
            Duration (min)
        </th>
        <th style="width: 10%">
            Type
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.DowntimeWFPs)
    {
        <tr style="text-align: center">
            <td>
                @Html.DisplayFor(modelItem => item.Subject)
            </td>
            <td>
                @item.Date.ToShortDateString()
            </td>
            <td>
                @if (item.Description != null && item.Description.Length > 25)
                {
                    @item.Description.Substring(0, 25)
                }
                else
                {
                    @item.Description
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                <button rid="@item.DownTimeId" name="editbtn" class="btn btn-link btn-sm Edit" aria-hidden="true">
                    <span class="glyphicon glyphicon-edit"></span>
                </button>
                <button rid="@item.DownTimeId" name="detailbtn" class="btn btn-link btn-sm Detail" aria-hidden="true">
                    <span class="glyphicon glyphicon-eye-open"></span>
                </button>
                <button rid="@item.DownTimeId" name="deletebtn" class="btn btn-link btn-sm Delete" aria-hidden="true">
                    <span class="glyphicon glyphicon-trash"></span>
                </button>
            </td>
        </tr>
    }

</table>

<div class="modal fade" id="createModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" id="btnCloseCreate">×</button>
                <h4 class="modal-title">Downtime</h4>
            </div>
            <div class="modal-body" id="createBody">
            </div>
        </div>

    </div>
</div>
<div class="modal fade" id="EditModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" id="btnCloseEdit">×</button>
                <h4 class="modal-title" id="myModalLabel">Downtime</h4>
            </div>
            <div class="modal-body" id="EditBody">
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" id="btnCloseDelete">×</button>
                <h4 class="modal-title">You want to delete this task?</h4>
            </div>
            <div class="modal-body" id="deleteBody">
            </div>
        </div>
    </div>
</div>
<script>
    $('#btnRefresh').click(function() {
        var p = $("#SelectedPeriod").val();
        var y = $('#SelectedYear').val();
       
        $.ajax({
            type: "POST",
            url: '@Url.Action("Summary","Downtimes")',
            datatype: "html",
            data: { "period": p, "year": y },
            success: function (data) {
            
                $('#setModalTitle').html("DownTime");
                $("#PanelModalBody").html(data);
             
            },
            error: function(data) {
                console.log(data);
            }

        });
    });
    $('#btnCreateDT').click(function() {

        $.ajax({
            type: "GET",
            url: '@Url.Action("Create", "Downtimes")',
            dataType: 'html',
            success: function(data) {

                $("#createBody").html(data);
                $('#createModal').modal('show');

            },
            //compelete: function(data) {
            //    $('#createModal').modal('hide');
            //}
            error: function() {
                alert("Create Failed");
            }
        });
    });
    $('.Detail').click(function() {
        var id = $(this).attr("rid");
        $.ajax({
            type: "GET",
            url: '@Url.Action("Details", "Downtimes")',
            data: { "id": id },
            dataType: 'html',
            success: function(data) {

                $("#EditBody").html(data);
                $("#EditModal").modal('show');
            },
            error: function() {
                alert("Detail Failed");
            }
        });
    });
    $('.Edit').click(function() {
        var id = $(this).attr("rid");
        $.ajax({
            type: "GET",
            url: '@Url.Action("Edit", "Downtimes")',
            data: { "id": id },
            dataType: 'html',
            success: function(data) {

                $("#EditBody").html(data);
                $('#EditModal').modal('show');
            },
            error: function() {
                alert("Edit Failed");
            }
        });
    });
    $('.Delete').click(function() {
        var id = $(this).attr("rid");
        $.ajax({
            type: "GET",
            url: '@Url.Action("Delete", "Downtimes")',
            data: { "id": id },
            dataType: 'html',
            success: function(data) {

                $("#deleteBody").html(data);
                $('#deleteModal').modal('show');
            },
            error: function() {
                alert("Delete Failed");
            }
        });
    });
    $('#btnCloseCreate').click(function () {
        $('#createModal').modal('hide');
    });
    $('#btnCloseEdit').click(function () {
        $('#EditModal').modal('hide');
    });
    $('#btnCloseDelete').click(function () {
        $('#deleteModal').modal('hide');
    });
</script>


@using BreakageFormViewModel = ENoticeBoard.ViewModels.BreakageFormViewModel
@model BreakageFormViewModel

@{
    ViewBag.Title = "Create";
}


<form id="createBrk">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="col-md-12 form-horizontal">

            <div class="form-group">
                @Html.LabelFor(model => model.Subject)

                @Html.EditorFor(model => model.Subject, new {htmlAttributes = new {@class = "form-control" }})
                @Html.ValidationMessageFor(model => model.Subject, "", new {@class = "text-danger"})

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date)
                @Html.TextBoxFor(model => model.Date, "{0:dd/MM/yyyy}", new {@class = "form-control", Type = "DateTime"})
                @Html.ValidationMessageFor(model => model.Date, "", new {@class = "text-danger"})

            </div>

            <div class="form-group">
                <label>Site</label>

                @Html.DropDownListFor(m => m.SiteId, new SelectList(Model.Sites, "SiteId", "Subject"), "", new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.SiteId)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cost)
                <div class="input-group">
                    <div class="input-group-addon">$</div>
                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control pull-right", @type = "number", @dir = "rtl" } })
                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <label>Type</label>
                @Html.DropDownListFor(m => m.TypeId, new SelectList(Model.Types, "TypeId", "Subject"), "", new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.TypeId)
            </div>
        </div>
        <div>
            <button type="button" id="btnSaveBrk" value="Save" class="btn btn-success">Save</button>
            
        </div>
    </div>

</form>

<script type="text/javascript">

    $(document).ready(function() {
        $(".formattedNumberField").on('input propertychange paste change', function (evt) {
            if (evt.which !== 110 && $(this).val() !== "") {
                var n = parseFloat($(this).val().replace(/\,/g, ''), 10);
                $(this).val(n.toLocaleString());
            }
        });

    });

    $('input[type=datetime]').datepicker({
        dateFormat: "dd/mm/yy",
        changeMonth: true,
        changeYear: true,
        maxDate:0,
        yearRange: "-2:+10"
    });
   

    $('#btnSaveBrk').click(function() {
        if ($("#Subject").val().trim() === "" ||
            $("#Date").val().trim() === "" ||
            $("#SiteId").val().trim() === "" ||
            $("#Cost").val().trim() === "" ||
            $("#TypeId").val().trim() === "") {
            alert("All fields are required");
            return;
        }
        if ($("#Subject").val().length >100) {
            alert("Subject is too long");
            return;
        }
        else {
            var s = moment($('#Date').val(), "DD/MM/YYYY", true);
            var isValid = s.isValid();
            if (isValid === false) {
                alert("Invalid date format: " + $('#Date').val());
                return;
            }
        }
        var $this = $("#createBrk");
        var dataToSend = $this.serialize();
        console.log(dataToSend);
        $.ajax({
            type: "POST",
            url: '@Url.Action("Create", "Breakages")',
            dataType: 'json',
            data: dataToSend,
            success: function() {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Summary", "Breakages")',
                    dataType: 'html',
                    success: function(data) {
                        $("#createModal").modal('hide');
                        $('#setModalTitle').html("Breakage");
                        $("#PanelModalBody").html(data);
                        $("#PanelModal").modal('show');
                    },

                    error: function(data) {
                        console.log(data);
                    }
                });
                @*$.ajax({
                    type: "GET",
                    url: '@Url.Action("GetSumBreakage", "Home")',
                    dataType: 'json',
                    success: function(data) {
                        $("#BreakageSum").html("$ " +data);
                    },
                    error: function() {
                        alert("Get Failed");
                    }
                });*@


            },
            error: function(data) {
                console.log(data);
            }
        });
    });

</script>
@model ENoticeBoard.Rock


<form id="EditRock">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RockId)
        @Html.HiddenFor(m=>m.DateCreated)

        <div class="col-md-12">
            <div class="form-group">
                <label>@Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })</label>
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control", required= true  } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                <label>@Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label", required = true })</label>

                @Html.DropDownListFor(m => m.Priority, new List<SelectListItem>
                {
                    new SelectListItem {Text = "Low", Value = "1"},
                    new SelectListItem {Text = "Medium Low", Value = "2"},
                    new SelectListItem {Text = "Medium", Value = "3"},
                    new SelectListItem {Text = "High", Value = "4"},
                    new SelectListItem {Text = "Very High", Value = "5"},
                }, new {@class = "form-control control-label"})
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Due Date</label>

                @Html.TextBoxFor(model => model.DateDue, "{0:dd/MM/yyyy}" ,new { @class = "form-control",@Type="DateTime" })
                @Html.ValidationMessageFor(model => model.DateDue, "", new { @class = "text-danger" })
            </div>

        </div>

        <button type="button" id="btnSaveEditt" value="Save" class="btn btn-success">Save</button>
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
    </div>
</form>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $('input[type=datetime]').datepicker({
        dateFormat: "dd/mm/yy",
        changeMonth: true,
        changeYear: true,
        minDate: 0,
        yearRange: "-2:+10"
    });
    $('#btnSaveEditt').click(function () {
        if ($('#Subject').val().trim() === "") {
            alert('Subject required');
            return;
        }
        if ($('#Subject').val().length > 150) {
            alert('Subject too long');
            return;
        }
        if ($('#DateDue').val().trim() === "") {
            alert('Due Date required');
            return;
                
        }
        // regular expression to match required date format
        var re = /^\d{1,2}\/\d{1,2}\/\d{4}$/;

        if ($('#DateDue').val() !== '' && !($('#DateDue').val().match(re))) {
            alert("Invalid date format: " + $('#DateDue').val());
            return;

        }
        var $this = $("#EditRock");
        var dataToSend = $this.serialize();
        console.log(dataToSend);
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Edit", "Rocks")',
                    data: dataToSend,
                    dataType: 'json',
                    success: function(data) {
                        location.reload();

                    },
                    error: function(data) {
                        alert("Edit Failed");
                        console.log(data);
                    }
                });
            });
</script>